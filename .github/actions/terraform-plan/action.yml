---
name: Terraform Plan

description: Terraform Plan

inputs:
  github-token:
    description: "github token"
    required: true
  AWS_GITHUB_ACTIONS_OIDC_ROLE:
    description: "AWS OIDC IAM Role"
    required: true
  working-directory:
    description: "Terraform CLI 実行時のパス"
    required: true

runs:
  using: composite
  steps:
    - name: Setup Terraform
      id: setup-terraform
      uses: "./.github/actions/setup-terraform"
      with:
        working-directory: ${{ inputs.working-directory }}
        AWS_GITHUB_ACTIONS_OIDC_ROLE: ${{ inputs.AWS_GITHUB_ACTIONS_OIDC_ROLE }}

    - name: Terraform Validate
      id: terraform-validate
      uses: "./.github/actions/terraform-validate"
      with:
        working-directory: ${{ inputs.working-directory }}

    - name: Setup tfcmt
      id: setup-tfcmt
      uses: itkq/actions-tfcmt/setup@main

    - name: Terraform Plan
      id: terraform-plan
      run: tfcmt -var target:prd plan -- terraform plan -no-color
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    # - name: Sticky Pull Request Comment
    #   id: sticky-pull-request-comment
    #   if: github.event_name == 'pull_request' # && steps.terraform-plan.outputs.changed == 'true'
    #   uses: marocchino/sticky-pull-request-comment@v2.2.0
    #   with:
    #     hide_and_recreate: true
    #     hide_classify: "OUTDATED"
    #     header: terraform-plan
        # message: |
        #   #### Terraform Format and Style 🖌`${{ steps.terraform-validate.outputs.terraform-fmt-outcome }}`
        #   #### Terraform Initialization ⚙️`${{ steps.setup-terraform.outputs.terraform-init-outcome }}`
        #   #### Terraform Validation 🤖`${{ steps.terraform-validate.outputs.terraform-validate-outcome }}`
        #   #### Terraform Plan 📖`${{ steps.terraform-plan.outcome }}`

        #   <details><summary>Show Plan</summary>

        #   ```hcl
        #   ${{ steps.terraform-plan.outputs.stdout }}
        #   ```

        #   </details>

    - name: Terraform Plan (failure) -> Status
      if: steps.terraform-plan.outcome == 'failure'
      run: exit 1
      shell: bash
