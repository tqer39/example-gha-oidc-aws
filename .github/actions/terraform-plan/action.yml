---
name: Terraform Plan

description: Terraform Plan

inputs:
  github-token:
    description: "github token"
    required: true
  AWS_GITHUB_ACTIONS_OIDC_ROLE:
    description: "AWS OIDC IAM Role"
    required: true
  working-directory:
    description: "Terraform CLI ÂÆüË°åÊôÇ„ÅÆ„Éë„Çπ"
    required: true

runs:
  using: composite
  steps:
    - uses: './.github/actions/setup-terraform'
      with:
        working-directory: ${{ inputs.working-directory }}
        AWS_GITHUB_ACTIONS_OIDC_ROLE: ${{ inputs.AWS_GITHUB_ACTIONS_OIDC_ROLE }}

    - uses: './.github/actions/terraform-validate'
      with:
        working-directory: ${{ inputs.working-directory }}

    - name: Terraform Plan
      id: terraform-plan
      run: terraform plan -no-color
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Sticky Pull Request Comment
      id: sticky-pull-request-comment
      uses: marocchino/sticky-pull-request-comment@v2.2.0
      with:
        hide_and_recreate: true
        header: terraform-plan
        message: |
          #### Terraform Plan üìñ`${{ steps.terraform-plan.outcome }}`
          <details><summary>Show Plan</summary>

          ```hcl
          terraform
          ${{ steps.plan.outputs.stdout }}
          ```

          </details>

    - name: Terraform Plan (failure) -> Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
      shell: bash
